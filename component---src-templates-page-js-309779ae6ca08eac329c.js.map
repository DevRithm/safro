{"version":3,"sources":["webpack:///./src/templates/Page.js"],"names":["Page","data","pageContext","strapi","page","pagesLayout","hasCallToAction","globalHeroButton","globalCallToAction","hasNoHero","map","item","__typename","title","pageTitle","callToAction","pageLayout"],"mappings":"2FAAA,oEAmMeA,UAjCF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAAkB,EAMlCD,EAJFE,OAFoC,IAGlCC,KAAQC,EAH0B,EAG1BA,YAAaC,EAHa,EAGbA,gBAAiBC,EAHJ,EAGIA,iBACtCC,EAJkC,EAIlCA,mBAMAC,GAAY,EAOhB,OANAJ,EAAYK,KAAI,SAAAC,GACd,MAA2B,4BAApBA,EAAKC,WACPH,GAAY,EACb,QAIJ,oCACE,kBAAC,IAAD,CAAKI,MAAOX,EAAYW,QACxB,kBAAC,IAAD,CACEJ,UAAWA,EACXF,iBAAkBA,EAClBO,UAAWZ,EAAYW,MACvBP,gBAAiBA,EACjBS,aAAcP,GAEd,kBAAC,IAAD,CAAcQ,WAAYX","file":"component---src-templates-page-js-309779ae6ca08eac329c.js","sourcesContent":["/**\n * @Author Ahmed Al-Yasiri\n * @Company Safro .e.U\n * @copyright (c) Safro .e.U\n * @desc page template\n **/\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport DynamicZones from '../components/DynamicZones'\n\nexport const settings = graphql`\n  fragment settingOptions on safro_ComponentBlockSettingsBlockSettings {\n    background\n    blockId\n  }\n`\n\nexport const query = graphql`\n  query($id: ID!) {\n    strapi {\n      page(id: $id) {\n        hasCallToAction: globalCallToAction\n        pagesLayout {\n          ... on safro_ComponentDealerLocationDealerLocation {\n            __typename\n            title\n            dealers {\n              name\n              addressText\n              addressLink\n            }\n          }\n          ... on safro_ComponentHeroHero {\n            __typename\n            title\n            subTitle\n            buttonText\n            buttonUrl\n            isExternal\n            heroImage: image {\n              alternativeText\n              url\n              imageFile {\n                childImageSharp {\n                  fluid {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n\n          ... on safro_ComponentTextText {\n            __typename\n            settings {\n              ...settingOptions\n            }\n            title\n            text\n            textAlign\n            titleAlign\n          }\n\n          ... on safro_ComponentImageImage {\n            __typename\n            settings {\n              ...settingOptions\n            }\n            caption\n            imageAlt\n            image {\n              url\n              imageFile {\n                childImageSharp {\n                  fluid {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n          ... on safro_ComponentContactBlockContactBlock {\n            __typename\n            settings {\n              ...settingOptions\n            }\n            title\n            email\n            phone\n            streetHouseNumber\n            zipcode\n            city\n            country\n            hasContactForm\n            contactFormTitle\n          }\n          ... on safro_ComponentQuoteQuote {\n            __typename\n            settings {\n              ...settingOptions\n            }\n            blockTitle: title\n            blockText: text\n            quotes {\n              quote\n              image {\n                alternativeText\n                url\n                imageFile {\n                  childImageSharp {\n                    fixed(width: 120, height: 120) {\n                      ...GatsbyImageSharpFixed\n                    }\n                  }\n                }\n              }\n              name\n              profession\n            }\n          }\n          ... on safro_ComponentTwoCalLayoutTwoColLayout {\n            __typename\n            settings {\n              ...settingOptions\n            }\n            video\n            media {\n              mime\n              alternativeText\n              url\n              imageFile {\n                publicURL\n                childImageSharp {\n                  fluid {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n            title\n            text\n            colReverse\n          }\n        }\n        globalHeroButton {\n          buttonText\n          buttonUrl\n        }\n      }\n      globalCallToAction {\n        title\n        text\n        buttonText\n        buttonUrl\n        isExternal\n      }\n    }\n  }\n`\n\nconst Page = ({ data, pageContext }) => {\n  const {\n    strapi: {\n      page: { pagesLayout, hasCallToAction, globalHeroButton },\n      globalCallToAction,\n    },\n  } = data\n\n  // check whether the page has a hero or not\n  // So that I know that I need o add the default hero\n  let hasNoHero = true\n  pagesLayout.map(item => {\n    return item.__typename === 'safro_ComponentHeroHero'\n      ? (hasNoHero = false)\n      : null\n  })\n\n  return (\n    <>\n      <SEO title={pageContext.title} />\n      <Layout\n        hasNoHero={hasNoHero}\n        globalHeroButton={globalHeroButton}\n        pageTitle={pageContext.title}\n        hasCallToAction={hasCallToAction}\n        callToAction={globalCallToAction}\n      >\n        <DynamicZones pageLayout={pagesLayout} />\n      </Layout>\n    </>\n  )\n}\n\nexport default Page\n"],"sourceRoot":""}